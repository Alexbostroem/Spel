STK_CTRL	C:\Users\nikla\Spel\define_global.h	/^#define STK_CTRL ((volatile unsigned int *)(0xE000E010))	\/\/ Status och styrregister$/;"	macro	line:2
STK_LOAD	C:\Users\nikla\Spel\define_global.h	/^#define STK_LOAD ((volatile unsigned int *)(0xE000E014))	\/\/ Räknarintervall$/;"	macro	line:3
STK_VAL	C:\Users\nikla\Spel\define_global.h	/^#define STK_VAL ((volatile unsigned int *)(0xE000E018))		\/\/ Räknarvärde$/;"	macro	line:4
GPIO_D_BASE	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_D_BASE 0x40020C00$/;"	macro	line:7
GPIO_D_MODER	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_D_MODER ((volatile unsigned int *)(GPIO_D_BASE))	$/;"	macro	line:8
GPIO_D_ODR_LOW	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_D_ODR_LOW ((volatile unsigned char *) GPIO_D_BASE + 0x14)	$/;"	macro	line:9
GPIO_D_ODR_HIGH	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_D_ODR_HIGH ((volatile unsigned char *) GPIO_D_BASE + 0x15)$/;"	macro	line:10
GPIO_D_ODR	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_D_ODR ((volatile unsigned short *) GPIO_D_BASE + 0x14)$/;"	macro	line:11
GPIO_D_IDR_LOW	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_D_IDR_LOW ((volatile unsigned char *) GPIO_D_BASE + 0x10)$/;"	macro	line:12
GPIO_D_IDR_HIGH	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_D_IDR_HIGH ((volatile unsigned char *) GPIO_D_BASE + 0x11)$/;"	macro	line:13
GPIO_D_OTYPER	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_D_OTYPER ((volatile unsigned short *) GPIO_D_BASE + 0x4)$/;"	macro	line:14
GPIO_D_OSPEEDER	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_D_OSPEEDER ((volatile unsigned int *) GPIO_D_BASE + 0x8)$/;"	macro	line:15
GPIO_D_PUPDR	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_D_PUPDR ((volatile unsigned int *) GPIO_D_BASE + 0xC)$/;"	macro	line:16
GPIO_E_BASE	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_E_BASE 0x40021000$/;"	macro	line:18
GPIO_E_MODER	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_E_MODER ((volatile unsigned int *)(GPIO_E_BASE))	$/;"	macro	line:19
GPIO_E_ODR_LOW	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_E_ODR_LOW ((volatile unsigned char *) GPIO_E_BASE + 0x14)$/;"	macro	line:20
GPIO_E_ODR_HIGH	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_E_ODR_HIGH ((volatile unsigned char *) GPIO_E_BASE + 0x15)$/;"	macro	line:21
GPIO_E_ODR	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_E_ODR ((volatile unsigned short *) GPIO_E_BASE + 0x14)$/;"	macro	line:22
GPIO_E_IDR_LOW	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_E_IDR_LOW ((volatile unsigned char *) GPIO_E_BASE + 0x10)$/;"	macro	line:23
GPIO_E_IDR_HIGH	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_E_IDR_HIGH ((volatile unsigned char *) GPIO_E_BASE + 0x11)$/;"	macro	line:24
GPIO_E_OTYPER	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_E_OTYPER ((volatile unsigned short *) GPIO_E_BASE + 0x4)$/;"	macro	line:25
GPIO_E_OSPEEDER	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_E_OSPEEDER ((volatile unsigned int *) GPIO_E_BASE + 0x8)$/;"	macro	line:26
GPIO_E_PUPDR	C:\Users\nikla\Spel\define_global.h	/^#define GPIO_E_PUPDR ((volatile unsigned int *) GPIO_E_BASE + 0xC)$/;"	macro	line:27
B_E	C:\Users\nikla\Spel\define_global.h	/^#define B_E 0x40$/;"	macro	line:30
B_SELECT	C:\Users\nikla\Spel\define_global.h	/^#define B_SELECT 0x04$/;"	macro	line:31
B_RW	C:\Users\nikla\Spel\define_global.h	/^#define B_RW 0x02$/;"	macro	line:32
B_RS	C:\Users\nikla\Spel\define_global.h	/^#define B_RS 0x01$/;"	macro	line:33
POINT	C:\Users\nikla\Spel\define_global.h	/^typedef struct POINT{$/;"	struct	line:37
x	C:\Users\nikla\Spel\define_global.h	/^	char x,y;$/;"	member	line:38	struct:POINT	access:public
y	C:\Users\nikla\Spel\define_global.h	/^	char x,y;$/;"	member	line:38	struct:POINT	access:public
POINT	C:\Users\nikla\Spel\define_global.h	/^typedef struct POINT{ 	char x,y; } POINT,*PPOINT; $/;"	typedef	line:39	typeref:struct:POINT
PPOINT	C:\Users\nikla\Spel\define_global.h	/^} POINT,*PPOINT; $/;"	typedef	line:39	typeref:struct:POINT
GEOMETRY	C:\Users\nikla\Spel\define_global.h	/^typedef struct GEOMETRY$/;"	struct	line:41
numpoints	C:\Users\nikla\Spel\define_global.h	/^	int numpoints;$/;"	member	line:43	struct:GEOMETRY	access:public
sizex	C:\Users\nikla\Spel\define_global.h	/^	int sizex;$/;"	member	line:44	struct:GEOMETRY	access:public
sizey	C:\Users\nikla\Spel\define_global.h	/^	int sizey;$/;"	member	line:45	struct:GEOMETRY	access:public
px	C:\Users\nikla\Spel\define_global.h	/^	POINT px [MAX_POINTS];	$/;"	member	line:46	struct:GEOMETRY	access:public
GEOMETRY	C:\Users\nikla\Spel\define_global.h	/^typedef struct GEOMETRY { 	int numpoints; 	int sizex; 	int sizey; 	POINT px [MAX_POINTS];	 }GEOMETRY,*PGEOMETRY; $/;"	typedef	line:47	typeref:struct:GEOMETRY
PGEOMETRY	C:\Users\nikla\Spel\define_global.h	/^}GEOMETRY,*PGEOMETRY; $/;"	typedef	line:47	typeref:struct:GEOMETRY
Obj	C:\Users\nikla\Spel\define_global.h	/^typedef struct Obj{$/;"	struct	line:49
geo_stand	C:\Users\nikla\Spel\define_global.h	/^	PGEOMETRY geo_stand;$/;"	member	line:50	struct:Obj	access:public
geo_run	C:\Users\nikla\Spel\define_global.h	/^	PGEOMETRY geo_run;$/;"	member	line:51	struct:Obj	access:public
geo_jump	C:\Users\nikla\Spel\define_global.h	/^	PGEOMETRY geo_jump;$/;"	member	line:52	struct:Obj	access:public
geo_duck	C:\Users\nikla\Spel\define_global.h	/^	PGEOMETRY geo_duck;$/;"	member	line:53	struct:Obj	access:public
geo_number	C:\Users\nikla\Spel\define_global.h	/^	int geo_number;$/;"	member	line:54	struct:Obj	access:public
dirx	C:\Users\nikla\Spel\define_global.h	/^	int dirx, diry;$/;"	member	line:55	struct:Obj	access:public
diry	C:\Users\nikla\Spel\define_global.h	/^	int dirx, diry;$/;"	member	line:55	struct:Obj	access:public
posx	C:\Users\nikla\Spel\define_global.h	/^	int posx, posy;$/;"	member	line:56	struct:Obj	access:public
posy	C:\Users\nikla\Spel\define_global.h	/^	int posx, posy;$/;"	member	line:56	struct:Obj	access:public
draw	C:\Users\nikla\Spel\define_global.h	/^	void (* draw) (struct Obj*);$/;"	member	line:57	struct:Obj	access:public
clear	C:\Users\nikla\Spel\define_global.h	/^	void (* clear) (struct Obj*);$/;"	member	line:58	struct:Obj	access:public
move	C:\Users\nikla\Spel\define_global.h	/^	void (* move) (struct Obj*);$/;"	member	line:59	struct:Obj	access:public
set_speed	C:\Users\nikla\Spel\define_global.h	/^	void (* set_speed) (struct Obj*, int, int);$/;"	member	line:60	struct:Obj	access:public
OBJECT	C:\Users\nikla\Spel\define_global.h	/^typedef struct Obj{ 	PGEOMETRY geo_stand; 	PGEOMETRY geo_run; 	PGEOMETRY geo_jump; 	PGEOMETRY geo_duck; 	int geo_number; 	int dirx, diry; 	int posx, posy; 	void (* draw) (struct Obj*); 	void (* clear) (struct Obj*);  	void (* move) (struct Obj*); 	void (* set_speed) (struct Obj*, int, int); }OBJECT, *POBJECT; $/;"	typedef	line:61	typeref:struct:Obj
POBJECT	C:\Users\nikla\Spel\define_global.h	/^}OBJECT, *POBJECT; $/;"	typedef	line:61	typeref:struct:Obj
geometri_cat	C:\Users\nikla\Spel\define_global.h	/^enum geometri_cat {stand,run,jump,duck};/;"	enum	line:65
stand	C:\Users\nikla\Spel\define_global.h	/^enum geometri_cat {stand,run,jump,duck};/;"	enumerator	line:65	enum:geometri_cat
run	C:\Users\nikla\Spel\define_global.h	/^enum geometri_cat {stand,run,jump,duck};/;"	enumerator	line:65	enum:geometri_cat
jump	C:\Users\nikla\Spel\define_global.h	/^enum geometri_cat {stand,run,jump,duck};/;"	enumerator	line:65	enum:geometri_cat
duck	C:\Users\nikla\Spel\define_global.h	/^enum geometri_cat {stand,run,jump,duck};/;"	enumerator	line:65	enum:geometri_cat
